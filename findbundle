#!/bin/bash

set -eo pipefail
if [ -n "$DEBUG" ]; then set -x; fi
trap 'echo "Error: $? at line $LINENO" >&2' ERR

# Set environment variables
RELEASE_NAME="aerospike-vector-search"
ARTIFACT_VERSION="0.4.0"
SERVER_ID="aerospike"
LOCAL_PATH="./downloads"


# Verify release bundle names
echo "Fetching release bundle names for project ${PROJECT}..."
jf rt curl -X GET "/api/v2/release_bundle/names?project=ecosystem" --server-id aerospike

# List artifacts
echo "Listing artifacts in the repository..."
jf rt curl -X POST /api/search/aql -H 'Content-Type: text/plain' -d "
items.find({
  \"repo\": {\"\$eq\":\"ecosystem-release-bundles-v2\"},
  \"name\": {\"\$match\":\"*\"}
})
" --server-id ${SERVER_ID}

# Create download spec file
echo "Creating download spec file..."
cat <<EOF > download-spec.json
{
  "files": [
    {
      "pattern": "ecosystem-release-bundles-v2/${RELEASE_NAME}-${ARTIFACT_VERSION}/28/**",
      "target": "${LOCAL_PATH}/"
    }
  ]
}
EOF

# Download artifacts using the spec file
echo "Downloading artifacts using the spec file..."
jf rt dl --spec=download-spec.json --server-id=${SERVER_ID}

echo "Download completed."
